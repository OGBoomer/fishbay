# Generated by Django 4.1.7 on 2023-06-03 19:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0012_delete_genericmenstop'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SearchProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.category')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SearchResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forsale', models.PositiveIntegerField()),
                ('avg_forsale_price', models.FloatField()),
                ('sold', models.PositiveIntegerField()),
                ('avg_sold_price', models.FloatField()),
                ('ratio', models.FloatField()),
                ('search_url', models.URLField(max_length=300)),
                ('last_updated', models.DateField(auto_now=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='searchprofile.searchprofile')),
            ],
        ),
        migrations.CreateModel(
            name='GenericMensTop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(blank=True, max_length=20, null=True)),
                ('size_type', models.CharField(blank=True, max_length=20, null=True)),
                ('size', models.CharField(blank=True, max_length=20, null=True)),
                ('sleeve_length', models.CharField(blank=True, max_length=20, null=True)),
                ('material', models.CharField(blank=True, max_length=20, null=True)),
                ('pattern', models.CharField(blank=True, max_length=20, null=True)),
                ('color', models.CharField(blank=True, max_length=20, null=True)),
                ('item_model', models.CharField(blank=True, max_length=100, null=True)),
                ('keywords', models.CharField(blank=True, max_length=250, null=True)),
                ('heading', models.CharField(max_length=100)),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item', to='searchprofile.searchresult')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=100)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='searchprofile.searchprofile')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('profile', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('keyword', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brand_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('user', 'name')},
            },
        ),
    ]
